service: ServerlessDotnetApi

frameworkVersion: ">2.1.0"

plugins:
  - serverless-dynamodb-local
custom:
  productReviewTableName: ProductReview

  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

provider:
  name: aws
  runtime: dotnetcore3.1
  region: us-east-1
  environment:
    PRODUCT_REVIEW_DYNAMODB_TABLE: ${self:custom.productReviewTableName}
    
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        # - dynamodb:Query
        # - dynamodb:Scan
        # - dynamodb:GetItem
        # - dynamodb:PutItem
        # - dynamodb:UpdateItem
        # - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.PRODUCT_REVIEW_DYNAMODB_TABLE}"

package:
  artifact: bin/release/netcoreapp3.1/deploy-package.zip

functions:
  api:
    handler: ServerlessDotnetApi::ServerlessDotnetApi.LambdaEntryPoint::FunctionHandlerAsync
    events:
     - http:
         path: /{proxy+}
         method: ANY

resources:
  Resources:
    ProductReviewsTableName:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: UserId
            AttributeType: N
          - AttributeName: ProductName
            AttributeType: S
        KeySchema:
          - AttributeName: UserId
            KeyType: HASH
          - AttributeName: ProductName
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PRODUCT_REVIEW_DYNAMODB_TABLE}
